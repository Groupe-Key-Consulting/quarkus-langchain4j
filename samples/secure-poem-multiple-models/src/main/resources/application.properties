# Named 'vertex-gemini' Google OpenID Connect provider

quarkus.oidc.vertex-gemini.provider=google
quarkus.oidc.vertex-gemini.client-id=${GOOGLE_CLIENT_ID}
quarkus.oidc.vertex-gemini.credentials.secret=${GOOGLE_CLIENT_SECRET}
quarkus.oidc.vertex-gemini.authentication.extra-params.scope=https://www.googleapis.com/auth/generative-language.retriever,https://www.googleapis.com/auth/cloud-platform
quarkus.oidc.vertex-gemini.authentication.redirect-path=/model/vertex-gemini

# Default Vertex AI Gemini model is accessed after a user has authenticated with Google.
# See https://cloud.google.com/vertex-ai/docs/geeral/locations

vertex-ai-region=europe-west2

quarkus.langchain4j.chat-model.provider=vertexai-gemini
quarkus.langchain4j.vertexai.gemini.location=${vertex-ai-region}
quarkus.langchain4j.vertexai.gemini.project-id=${GOOGLE_PROJECT_ID}
quarkus.langchain4j.vertexai.gemini.log-requests=true
quarkus.langchain4j.vertexai.gemini.log-responses=true

# Named 'azure-openai' Entra ID OpenID Connect provider

quarkus.oidc.azure-openai.auth-server-url=https://login.microsoftonline.com/${AZURE_TENANT_ID}/v2.0
quarkus.oidc.azure-openai.application-type=web-app
quarkus.oidc.azure-openai.client-id=${AZURE_CLIENT_ID}
quarkus.oidc.azure-openai.credentials.secret=${AZURE_CLIENT_SECRET}
quarkus.oidc.azure-openai.authentication.redirect-path=/model/azure-openai
quarkus.oidc.azure-openai.authentication.scopes=profile,https://cognitiveservices.azure.com/.default
quarkus.oidc.azure-openai.token.principal-claim=name

# Named Azure OpenAI model is accessed after a user has authenticated with Entra ID.

quarkus.langchain4j.openai.chat-model.provider=azure-openai
quarkus.langchain4j.azure-openai.openai.resource-name=${AZURE_OPENAI_RESOURCE}
quarkus.langchain4j.azure-openai.openai.deployment-name=${AZURE_OPENAI_DEPLOYMENT}
quarkus.langchain4j.azure-openai.openai.api-version=${AZURE_OPENAI_DEPLOYMENT_API_VERSION}
quarkus.langchain4j.azure-openai.openai.log-requests=true
quarkus.langchain4j.azure-openai.openai.log-responses=true

# Disable Keycloak devservice
quarkus.keycloak.devservices.enabled=false
